# Generated by Django 4.2.4 on 2023-11-08 12:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountCreationDate', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('companyID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('industry', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('foundedYear', models.PositiveIntegerField()),
                ('website', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=50, null=True)),
                ('lastName', models.CharField(max_length=50, null=True)),
                ('birthDate', models.DateField(null=True)),
                ('location', models.CharField(max_length=150, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('appuser', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='helloapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('memberCount', models.PositiveIntegerField()),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('createdByUserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helloapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='UserGroupConnection',
            fields=[
                ('connectionID', models.AutoField(primary_key=True, serialize=False)),
                ('connectionDate', models.DateTimeField(auto_now_add=True)),
                ('connectionType', models.CharField(max_length=50)),
                ('userGroupID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helloapp.usergroup')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='helloapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='UserConnection',
            fields=[
                ('connectionID', models.AutoField(primary_key=True, serialize=False)),
                ('connectionDate', models.DateTimeField(auto_now_add=True)),
                ('connectionType', models.CharField(max_length=50)),
                ('userID1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user1ID', to='helloapp.appuser')),
                ('userID2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2ID', to='helloapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('skillID', models.AutoField(primary_key=True, serialize=False)),
                ('skillName', models.CharField(max_length=100)),
                ('skillLevel', models.CharField(max_length=50)),
                ('endorsementCount', models.PositiveIntegerField(default=0, editable=False)),
                ('profile', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='helloapp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postID', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='helloapp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('messageID', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('isRead', models.BooleanField(default=False)),
                ('receiverUserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='helloapp.appuser')),
                ('senderUserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='helloapp.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('experienceID', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('employmentType', models.CharField(max_length=100)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('profile', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='helloapp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('educationID', models.AutoField(primary_key=True, serialize=False)),
                ('school', models.CharField(max_length=200)),
                ('degree', models.CharField(max_length=200)),
                ('fieldOfStudy', models.CharField(max_length=200)),
                ('graduationDate', models.DateField()),
                ('activities', models.TextField()),
                ('description', models.TextField()),
                ('profile', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='helloapp.profile')),
            ],
        ),
        migrations.AddField(
            model_name='appuser',
            name='userConnections',
            field=models.ManyToManyField(editable=False, through='helloapp.UserConnection', to='helloapp.appuser'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='userGroupConnections',
            field=models.ManyToManyField(editable=False, through='helloapp.UserGroupConnection', to='helloapp.appuser'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='helloapp.profile')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='helloapp.profile')),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
